#BlueJ class context
comment0.params=
comment0.target=Turtle()
comment1.params=degrees
comment1.target=void\ turn(double)
comment1.text=\n\ Turns\ the\ turtle\ relative\ to\ its\ direction.\n\ \n
comment10.params=
comment10.target=void\ penUp()
comment10.text=\n\ Takes\ the\ pen\ up.\n
comment11.params=
comment11.target=void\ penDown()
comment11.text=\n\ Puts\ the\ pen\ down.\n
comment12.params=newColor
comment12.target=void\ setColor(java.lang.String)
comment12.text=\ \n\ Set\ the\ color\ of\ the\ pen.\n\ Accepted\ colours\ are\:\ "red",\ "black",\ "blue",\ "yellow",\ "green",\ "magenta",\ "white"\n
comment13.params=colorString
comment13.target=java.awt.Color\ decode(java.lang.String)
comment13.text=\ \n\ Translate\ a\ String\ into\ a\ Color\n
comment14.params=world
comment14.target=void\ addedToWorld(greenfoot.World)
comment14.text=\n\ We\ need\ to\ make\ sure\ that\ our\ own\ representaion\ of\ the\ location\ is\ the\n\ same\ as\ the\ World's.\n
comment15.params=x1\ y1\ x2\ y2
comment15.target=void\ drawLine(double,\ double,\ double,\ double)
comment15.text=\n\ Draw\ a\ line\ between\ to\ point\ with\ the\ current\ colour.\n
comment16.params=image
comment16.target=void\ drawPen(greenfoot.GreenfootImage)
comment16.text=\ \n\ Draw\ the\ pen\ on\ the\ back\ of\ the\ turtle\ with\ the\ correct\ colour\ \n
comment17.params=x\ y
comment17.target=void\ setLocation(double,\ double)
comment17.text=\n\ Set\ the\ location\ of\ the\ turtle.\n
comment18.params=x\ y
comment18.target=void\ setLocation(int,\ int)
comment18.text=\n\ We\ need\ to\ override\ this\ method,\ so\ we\ can\ interactively\ move\ objects.\n\ This\ method\ should\ not\ be\ used\ by\ subclasses.\ Use\ the\ \n\ setLocation(double\ x,\ double\ y)\ instead\n
comment19.params=
comment19.target=void\ erase()
comment19.text=\n\ Erase\ all\ drawings.\n
comment2.params=degrees
comment2.target=void\ turn(int)
comment2.text=\n\ Turns\ the\ turtle\ relative\ to\ its\ direction.\n\ \n
comment3.params=degrees
comment3.target=void\ turnTo(double)
comment3.text=\n\ Turns\ the\ turtle\ to\ an\ absolute\ direction.\n
comment4.params=
comment4.target=int\ getDirection()
comment4.text=\n\ Returns\ the\ direction.\n
comment5.params=d
comment5.target=void\ setDirection(double)
comment5.text=\n\ Sets\ the\ direction\ to\ d\n
comment6.params=d
comment6.target=void\ setDelay(int)
comment7.params=newX\ newY
comment7.target=void\ moveTo(double,\ double)
comment7.text=\n\ Moves\ the\ turtle\ to\ the\ given\ position.\n
comment8.params=distance
comment8.target=void\ move(double)
comment8.text=\n\ Moves\ the\ turtle\ the\ given\ distance.\n
comment9.params=distance
comment9.target=void\ move(int)
comment9.text=\n\ Moves\ the\ turtle\ the\ given\ distance.\n
numComments=20
